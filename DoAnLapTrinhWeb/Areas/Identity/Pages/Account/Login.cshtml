@page
@model LoginModel
@{
    ViewData["Title"] = "Log in";
    ViewData["isAccount"] = true;
    Layout = "~/Areas/Identity/Pages/_ExpenseLayout.cshtml";
    var hasError = !ViewData.ModelState.IsValid;
    var errorMessage = hasError ? ViewData.ModelState[string.Empty].Errors[0].ErrorMessage : string.Empty;
}
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
        color: #0FFF50;
    }

    body {
        transform: scale(1);
        transform-origin: 0 0;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-size: cover;
        background-position: center;
        overflow: hidden;
    }

    .wrapper {
        box-sizing: border-box;
        background: transparent;
        border: 2px solid rgba(255, 255, 255, .2);
        backdrop-filter: blur(9px);
        color: #fff;
        border-radius: 12px;
        padding: 30px 40px;
        width: 400px;
    }

        .wrapper h1 {
            font-size: 36px;
            text-align: center;
        }

        .wrapper .input-box {
            position: relative;
            width: 100%;
            height: 50px;
            margin: 30px 0;
        }

    .input-box input {
        width: 100%;
        height: 100%;
        background: transparent;
        border: none;
        outline: none;
        border: 2px solid rgba(255, 255, 255, .2);
        border-radius: 40px;
        font-size: 16px;
        color: #fff;
        padding: 20px 45px 20px 20px;
    }

        .input-box input::placeholder {
            color: #fff;
        }

    .input-box i {
        position: absolute;
        right: 20px;
        top: 30%;
        transform: translate(-50%);
        font-size: 20px;
    }

    .wrapper .remember-forgot {
        display: flex;
        justify-content: space-between;
        font-size: 14.5px;
        margin: -15px 0 15px;
    }

    .remember-forgot label input {
        accent-color: #fff;
        margin-right: 3px;
    }

    .remember-forgot a {
        color: #fff;
        text-decoration: none;
    }

        .remember-forgot a:hover {
            text-decoration: underline;
        }

    .wrapper .btn {
        width: 100%;
        height: 45px;
        background: #fff;
        border: none;
        outline: none;
        border-radius: 40px;
        box-shadow: 0 0 10px rgba(0, 0, 0, .1);
        cursor: pointer;
        font-size: 16px;
        color: #333;
        font-weight: 600;
    }

    .wrapper .register-link {
        font-size: 14.5px;
        text-align: center;
        margin: 20px 0 15px;
    }

    .register-link p a {
        color: #fff;
        text-decoration: none;
        font-weight: 600;
    }

    .main-content {
        overflow: hidden;
    }

    /* To specify font size and color */
    .e-float-input.e-control-wrapper:not(.e-error) input:valid ~ label.e-float-text, .e-float-input.e-control-wrapper:not(.e-error) input ~ label.e-label-top.e-float-text {
        color: pink;
        font-size: 15px;
    }

    .register-link p a:hover {
        text-decoration: underline;
    }




    .e-richtexteditor .e-rte-placeholder {
        font-family: monospace;
        color: red;
    }

    .input-box input::placeholder {
        color: #0FFF50 !important; /* Sử dụng !important để đảm bảo quy tắc này có ưu tiên */
    }

    input:focus + label {
        color: #0FFF50;
    }

    .external {
        border-radius: 30px;
    }


   




</style>




<div id="target" style="height: 1px;"></div>
    <form id="account" method="post">
        <h1 style="color: #0FFF50">Login</h1>
        <div class="input-box">
            <ejs-textbox ejs-for="Input.Email" type="text" placeholder="Email" aria-required="true" ShowClearButton=false></ejs-textbox>
            <i class='bx bxs-user'></i>
        </div>
        <div class="input-box">
            <ejs-textbox ejs-for="Input.Password" type="password" placeholder="Password" aria-required="true" ShowClearButton=false></ejs-textbox>
            <i class='bx bxs-lock-alt'></i>          
        </div>
        <div class="remember-forgot">
            <label><input type="checkbox" asp-for="Input.RememberMe" style="color: black"> Remember Me</label>
            <a href="#" style="color: #0FFF50">Forgot Password</a>
        </div>
        
        @if (hasError)
        {
            <div class="alert alert-danger">
                @errorMessage
            </div>
        }
        
        <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
        <div class="register-link">
            <p>Dont have an account? <a href="/Identity/Account/Register">Register</a></p>
        </div>
    </form>


<div class="col-md-12 justify-content-xl-center">
    <section class="justify-content-center">
        <hr />
        <h5 style="text-align: center;">
            Đăng nhập khác !
        </h5>

        @{
            if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                            article
                            about setting up this ASP.NET application to support logging in via external services
                        </a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            <div class="flex flex-col gap-100" style=" display: flex; flex-direction: column; justify-content: space-evenly; gap: 10px; ">
                                @foreach (var provider in Model.ExternalLogins!)
                                {

                                    @if (provider.Name == "Google")
                                    {

                                        <button type="submit" name="provider" value="@provider.Name" class=" external px-4 py-2 border flex gap-2 border-slate-200 dark:border-slate-700 rounded-lg text-slate-700 dark:text-slate-200 hover:border-slate-400 dark:hover:border-slate-500  hover:text-slate-900 dark:hover:text-slate-300 hover:shadow transition duration-150">
                                            <img class="w-6 h-6" src="https://www.svgrepo.com/show/475656/google-color.svg" width="10%" loading="lazy" alt="google logo">
                                            <span style="color: black">Login with Google</span>
                                        </button>

                                    }
                                    @*<button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">c</button>*@

                                    @if (provider.Name == "Facebook")
                                    {

                                        <button type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account" class=" external px-4 py-2 border border-radius: 40px flex gap-2 border-slate-200 dark:border-slate-700 rounded-lg text-slate-700 dark:text-slate-200 hover:border-slate-400 dark:hover:border-slate-500  hover:text-slate-900 dark:hover:text-slate-300 hover:shadow transition duration-150">
                                            <img class="w-6 h-6" src="https://www.svgrepo.com/show/303114/facebook-3-logo.svg" width="10%" loading="lazy" alt="google logo">
                                            <span style="color: black">Login with Facebook</span>
                                        </button>

                                    }

                                    @if (provider.Name == "Microsoft")
                                    {

                                        <button type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account" class=" external px-4 py-2 border border-radius: 40px flex gap-2 border-slate-200 dark:border-slate-700 rounded-lg text-slate-700 dark:text-slate-200 hover:border-slate-400 dark:hover:border-slate-500  hover:text-slate-900 dark:hover:text-slate-300 hover:shadow transition duration-150">
                                            <img class="w-6 h-6" src="https://www.svgrepo.com/show/452062/microsoft.svg" width="10%" loading="lazy" alt="google logo">
                                            <span style="color: black">Login with Microsoft</span>
                                        </button>

                                    }
                                }
                            </div>
                        </p>
                    </div>
                </form>
            }
        }
    </section>
</div>












<script>
    function loadRandomBackground() {
        var images = [
            "1202329.webp",
            "img.webp",
            "bonus_looping_gif.gif",
            "wallpaperflare.com_wallpaper.webp",
            "images1.webp",
        ];
        function setBackgroundImage() {
            var randomIndex = Math.floor(Math.random() * images.length);
            var randomImage = images[randomIndex];
            document.body.style.backgroundImage = "url('/BackgroundImage/" + randomImage + "')";
        }
        function lazyLoadCallback(entries, observer) {
            entries.forEach(function (entry) {
                if (entry.isIntersecting) {
                    setBackgroundImage();
                    observer.unobserve(entry.target);
                }
            });
        }

        var observer = new IntersectionObserver(lazyLoadCallback, { root: null, threshold: 0.1 });

        var target = document.querySelector('#target');
        observer.observe(target);
    }
    window.onload = loadRandomBackground;


</script>




















@*
<div class="row justify-content-center">
    <div class="col-md-10">
        <section>
            <form id="account" method="post">
                <h2>Chào mừng trở lại!!</h2>
                <hr />

                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-group">
                    <div>
                        <label asp-for="Input.Email" class="form-label">Email</label>
                    </div
                    <div class="control-section">
                        <div class="control_wrapper textbox-control-section">
                           <ejs-textbox id="Input.Email" placeholder="name@example.com" ejs-for="Input.Email" floatLabelType="Always" aria-required="true"></ejs-textbox>
                        </div>
                    </div>
                </div>
                <div>
                        <label asp-for="Input.Password" class="form-label">Password</label>
                </div
                <div class="form-group">
                   <div class="control-section">
                        <div class="control_wrapper textbox-control-section">
                           <ejs-textbox id="Input.Password" placeholder="password" ejs-for="Input.Password" floatLabelType="Always" aria-required="true"></ejs-textbox>
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>
                    </div>

                    @*<input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">Password</label>

                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div class="justify-content-center">
                    @*<button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                     <ejs-button id="login-submit" type="submit" cssClass="e-success" content="Đăng nhập"></ejs-button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Quên mật khẩu?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Đăng ký tài khoản mới</a>
                    </p>
                    @* <p>
                    <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>

            </form>
        </section>
    </div>

</div>
*@






@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
